{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/FeedbackOptions/options.js","components/Notification/Notification.js","App.js","index.js","components/Container/Container.module.css","components/Section/Title.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","Section","title","children","styles","FeedbackOptions","options","onLeaveFeedback","list","map","item","onClick","label","id","Notification","message","App","state","event","currentButton","target","textContent","setState","prevGoodState","prevNeutralState","prevBadState","this","totalFeedback","percentage","Math","floor","isNaN","container","buttons","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6QAuBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAU,aAAf,UACE,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCMSE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,oBAAIH,UAAWI,IAAOF,MAAtB,SAA8BA,IAC7BC,M,gBCYUE,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIP,UAAWI,IAAOI,KAAtB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,6BACE,wBAAQC,QAASJ,EAAjB,SAAmCG,EAAKE,SADjCF,EAAKG,UCDLP,EANC,CACd,CAAEO,GAAI,OAAQD,MAAO,QACrB,CAAEC,GAAI,OAAQD,MAAO,WACrB,CAAEC,GAAI,OAAQD,MAAO,QCMRE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,8BAAMA,KCyE7BC,E,4MAlEbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAAAW,GAChB,IAAMC,EAAgBD,EAAME,OAAOC,YACb,SAAlBF,EACF,EAAKG,UAAS,SAAAC,GAAa,MAAK,CAC9B5B,KAAM4B,EAAc5B,KAAO,MAEF,YAAlBwB,EACT,EAAKG,UAAS,SAAAE,GAAgB,MAAK,CACjC5B,QAAS4B,EAAiB5B,QAAU,MAEX,QAAlBuB,GACT,EAAKG,UAAS,SAAAG,GAAY,MAAK,CAC7B5B,IAAK4B,EAAa5B,IAAM,O,wDAK9B,WAAsB,IAAD,EACY6B,KAAKT,MAGpC,OAJmB,EACXtB,KADW,EACLC,QADK,EACIC,M,6CAMzB,WAAmC,IAAD,EACD6B,KAAKT,MAA5BtB,EADwB,EACxBA,KACFgC,EAAgBhC,EAFU,EAClBC,QADkB,EACTC,IAEjB+B,EAAaC,KAAKC,MAAOnC,EAAOgC,EAAiB,KACvD,OAAOI,MAAMH,GAAc,EAAIA,I,oBAGjC,WACE,OACE,mCACE,sBAAK5B,UAAWI,IAAO4B,UAAvB,UACE,cAAC,EAAD,CAAS9B,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEI,QAAS2B,EACT1B,gBAAiBmB,KAAKnB,oBAI1B,cAAC,EAAD,CAASL,MAAO,aAAhB,SACGwB,KAAKQ,qBAAuB,EAC3B,cAAC,EAAD,CAAcnB,QAAS,sBAEvB,cAAC,EAAD,CACEpB,KAAM+B,KAAKT,MAAMtB,KACjBC,QAAS8B,KAAKT,MAAMrB,QACpBC,IAAK6B,KAAKT,MAAMpB,IAChBC,MAAO4B,KAAKQ,qBACZnC,mBAAoB2B,KAAKS,+C,GA1DvBC,a,MCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,MAAQ,uB,kBCA1BD,EAAOC,QAAU,CAAC,KAAO,iC","file":"static/js/main.12a9bb22.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"Statistics\">\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number,\r\n  neutral: propTypes.number,\r\n  bad: propTypes.number,\r\n  total: propTypes.number,\r\n  positivePercentage: propTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styles from './Title.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={styles.list}>\r\n    {options.map(item => (\r\n      <li key={item.id}>\r\n        <button onClick={onLeaveFeedback}>{item.label}</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: propTypes.array,\r\n  onLeaveFeedback: propTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const options = [\r\n  { id: 'id-1', label: 'Good' },\r\n  { id: 'id-2', label: 'Neutral' },\r\n  { id: 'id-3', label: 'Bad' },\r\n];\r\n\r\nexport default options;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <div>{message}</div>;\r\n\r\nNotification.propTypes = {\r\n  message: propTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport styles from './components/Container/Container.module.css';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport buttons from './components/FeedbackOptions/options';\r\nimport Notification from './components/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = event => {\r\n    const currentButton = event.target.textContent;\r\n    if (currentButton === 'Good') {\r\n      this.setState(prevGoodState => ({\r\n        good: prevGoodState.good + 1,\r\n      }));\r\n    } else if (currentButton === 'Neutral') {\r\n      this.setState(prevNeutralState => ({\r\n        neutral: prevNeutralState.neutral + 1,\r\n      }));\r\n    } else if (currentButton === 'Bad') {\r\n      this.setState(prevBadState => ({\r\n        bad: prevBadState.bad + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n\r\n    return total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalFeedback = good + neutral + bad;\r\n    const percentage = Math.floor((good / totalFeedback) * 100);\r\n    return isNaN(percentage) ? 0 : percentage;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.container}>\r\n          <Section title={'Please leave feedback'}>\r\n            <FeedbackOptions\r\n              options={buttons}\r\n              onLeaveFeedback={this.onLeaveFeedback}\r\n            />\r\n          </Section>\r\n\r\n          <Section title={'Statistics'}>\r\n            {this.countTotalFeedback() < 1 ? (\r\n              <Notification message={'No feedback given'} />\r\n            ) : (\r\n              <Statistics\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.countTotalFeedback()}\r\n                positivePercentage={this.countPositiveFeedbackPercentage()}\r\n              />\r\n            )}\r\n          </Section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1cXJQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2yp1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__30u1n\"};"],"sourceRoot":""}